import { Finder } from "./finder";
import type { ArrayElement, OptionsTuple, OptsToUse } from "./finder";
import type { Options } from "./types";
export type { Tiebreaker, FzfResultItem } from "./types";
export * from "./matchers";
export * from "./tiebreakers";
export declare type FzfOptions<U = string> = U extends string ? OptsToUse<U> : OptsToUse<U> & {
    selector: Options<U>["selector"];
};
export declare class Fzf<L extends ReadonlyArray<any>> {
    private finder;
    find: Finder<L>["find"];
    constructor(list: L, ...optionsTuple: OptionsTuple<ArrayElement<L>>);
}
